//! To run the following example, use the commands below
//! ```bash
//! // in the root directory of `wasinn-app`
//! cargo run wasinn-mobilenet-app.wasm mobilenet.pt input.jpg
//! ```
//!
//! Notice that the `wasinn-mobilenet-app.wasm` is generated by `wasinn-mobilenet-app` project

use wasmedge_sdk::{
    config::{CommonConfigOptions, ConfigBuilder, HostRegistrationConfigOptions},
    params, Module, Vm,
};

fn main() -> anyhow::Result<()> {
    let args: Vec<String> = std::env::args().collect();
    let wasm_file: &str = &args[1];
    let pytorch_model_file: &str = &args[2];
    let image_file: &str = &args[3];

    let config = ConfigBuilder::new(CommonConfigOptions::default())
        .with_host_registration_config(HostRegistrationConfigOptions::default().wasi_nn(true))
        .build()?;
    assert!(config.wasi_enabled());
    assert!(config.wasi_nn_enabled());

    let module = Module::from_file(Some(&config), wasm_file)?;

    // create a vm
    let mut vm = Vm::new(Some(config))?;

    // init wasi module
    let mut wasi_module = vm.wasi_module()?;
    wasi_module.initialize(
        Some(vec!["placeholder", pytorch_model_file, image_file]),
        None,
        Some(vec![".:."]),
    );

    // register the wasm module hosting the wasi-nn-pytorch app into vm
    let vm = vm.register_module(Some("main"), module)?;

    let main_ins = vm.named_module("main")?;
    main_ins
        .func_names()
        .unwrap()
        .iter()
        .for_each(|name| println!("*** func_name: {}", name));

    vm.run_func(Some("main"), "_start", params!())?;

    Ok(())
}
